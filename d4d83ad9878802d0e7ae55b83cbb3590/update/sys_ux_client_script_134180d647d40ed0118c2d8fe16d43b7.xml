<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <controller_preset/>
        <includes/>
        <macroponent display_value="KPI Details">807682d447dc8e90118c2d8fe16d436f</macroponent>
        <name>line_1/dataSources</name>
        <preset/>
        <required_translations>[
    
]</required_translations>
        <script><![CDATA[/**
  * @param {params} params
  * @param {api} params.api
  * @param {TransformApiHelpers} params.helpers
  */
function evaluateProperty({api, helpers}) {
    var serverMapping = {
        "cmdb_ci_linux_server": {
            server: api.state.cmdbCIServer,
            serverTitle: "Linux"
        },
        "cmdb_ci_win_server": {
            server: api.state.cmdbCIServer,
            serverTitle: "Windows"
        }
    };

    var { server, serverTitle } = serverMapping[api.state.ciClass] || {};
    let resource = api.state.resource;

    // 8A)
    let tableKey = (resource && resource.length > 0)
        ? "ci_resource_hardware" // with resources
        : api.state.ciClass; // without resources

    // 8B)
    let queryStringArray = (resource && resource.length > 0)
        ? `^name=${resource}` // If resource is not empty or null
        : ''; // If resource is empty or null

    let filterQuery = (resource && resource.length > 0)
        ? `cmdb_ci=${api.state.sysID}${queryStringArray}` // resources has values return updated logic
        : `name=${server}`; // resources is blank leave old logic

    let agentsArray = [];
    if (api.state.agents && Array.isArray(api.state.agents) && api.state.agents.length !== 0 ) {
        agentsArray = api.state.agents.map((agent) => ({
            allowRealTime: true,
            dataCategories: ["trend"],
            filterQuery: resource && resource.length > 0 ? `cmdb_ci=${agent.sysID}${queryStringArray}` : `name=${agent.cmdbCIServer}`,
            id: agent.id,
            isDatabaseView: false,
            label: {
                code: null,
                comment: "",
                message: `${agent.cmdbCIServer}: ${serverTitle} Server`
            },
            preferredVisualizations: ["aba8630dc2ccc9b3c1774af1b6820696"],
            sourceType: "metricBase",
            table: tableKey
        }));
    }

    let currentDataSource = {
        allowRealTime: true,
        dataCategories: ["trend"],
        filterQuery: filterQuery,
        id: "bWV0cmljQmFzZWNtZGJfY2lfd2luX3NlcnZlcjE3MDU2MzM0MDk3NzI=",
        isDatabaseView: false,
        label: {
            code: null,
            comment: "",
            message: `${serverTitle} Server`
        },
        preferredVisualizations: ["aba8630dc2ccc9b3c1774af1b6820696"],
        sourceType: "metricBase",
        table: tableKey
    };

    let dataSource = [currentDataSource, ...agentsArray];
    console.log("DATASOURCE RETURNED ARRAY DATA: ", dataSource);

    return dataSource;
}]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>david.montanez</sys_created_by>
        <sys_created_on>2024-02-13 17:13:40</sys_created_on>
        <sys_id>134180d647d40ed0118c2d8fe16d43b7</sys_id>
        <sys_mod_count>13</sys_mod_count>
        <sys_name>line_1/dataSources</sys_name>
        <sys_package display_value="Optimiz AIOps Insights" source="x_opti8_optimiz_ai">d4d83ad9878802d0e7ae55b83cbb3590</sys_package>
        <sys_policy/>
        <sys_scope display_value="Optimiz AIOps Insights">d4d83ad9878802d0e7ae55b83cbb3590</sys_scope>
        <sys_update_name>sys_ux_client_script_134180d647d40ed0118c2d8fe16d43b7</sys_update_name>
        <sys_updated_by>david.montanez</sys_updated_by>
        <sys_updated_on>2024-02-13 21:53:04</sys_updated_on>
        <target>macroponent</target>
        <type>transform</type>
    </sys_ux_client_script>
</record_update>
