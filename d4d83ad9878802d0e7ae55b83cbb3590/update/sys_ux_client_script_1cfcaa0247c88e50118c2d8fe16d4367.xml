<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <controller_preset/>
        <includes/>
        <macroponent display_value="360 CI Dashboard">373ecc6147cc4a50118c2d8fe16d43bd</macroponent>
        <name>single_score_30/dataSources</name>
        <preset/>
        <required_translations>[
    
]</required_translations>
        <script><![CDATA[/**
 * @param {params} params
 * @param {api} params.api
 * @param {TransformApiHelpers} params.helpers
 */
function evaluateProperty({
    api,
    helpers
}) {
    var serverMapping = {
        "cmdb_ci_linux_server": {
            server: api.state.cmdbCiServer,
            serverTitle: "Linux"
        },
        "cmdb_ci_win_server": {
            server: api.state.cmdbCiServer,
            serverTitle: "Windows"
        }
    };

    var { server, serverTitle } = serverMapping[api.state.ciClass] || {};

    let resourceArray = api.item.value.resource;

    // 8A)
    let tableKey = resourceArray.length > 0
        ? "ci_resource_hardware" // with resources
        : api.state.ciClass; // without resources

    // 8B)
    // joins the resources as many times -> `^name=${resource}`
    const queryStringArray = resourceArray.map(resource => `^name=${resource}`).join('');

    const filterQuery = resourceArray.length > 0
        ? `cmdb_ci=${api.state.ciSysID}${queryStringArray}` // resources has values return updated logic
        : `name=${server}`; // resources is blank leave old logic

    return [{
        allowRealTime: true,
        dataCategories: ["trend"],
        filterQuery: filterQuery, // updated with Resources logic
        id: "bWV0cmljQmFzZWNtZGJfY2lfd2luX3NlcnZlcjE3MDU2MzM0MDk3NzI=",
        isDatabaseView: false,
        label: {
            code: null,
            comment: "",
            message: `${serverTitle} Server`
        },
        preferredVisualizations: ["aba8630dc2ccc9b3c1774af1b6820696"],
        sourceType: "metricBase",
        table: tableKey // updated with Resources logic
    }];
}]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>optimiz</sys_created_by>
        <sys_created_on>2024-01-31 22:19:18</sys_created_on>
        <sys_id>1cfcaa0247c88e50118c2d8fe16d4367</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>single_score_30/dataSources</sys_name>
        <sys_package display_value="Optimiz AIOps Insights" source="x_opti8_optimiz_ai">d4d83ad9878802d0e7ae55b83cbb3590</sys_package>
        <sys_policy/>
        <sys_scope display_value="Optimiz AIOps Insights">d4d83ad9878802d0e7ae55b83cbb3590</sys_scope>
        <sys_update_name>sys_ux_client_script_1cfcaa0247c88e50118c2d8fe16d4367</sys_update_name>
        <sys_updated_by>optimiz</sys_updated_by>
        <sys_updated_on>2024-01-31 22:19:18</sys_updated_on>
        <target>macroponent</target>
        <type>transform</type>
    </sys_ux_client_script>
</record_update>
